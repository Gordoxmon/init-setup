---
- name: Install Arch Linux specific packages
  hosts: local
  become: yes
  vars:
    aur_packages:
      - jetbrains-toolbox
      - cursor-bin
      - bruno-bin
      - zen-browser-bin
    repo_packages:
      - chromium
      - discord
      - vlc
      - libreoffice-fresh
      - docker
      - docker-compose
      - obsidian
      - steam


  tasks:
    - name: Update package cache
      pacman:
        update_cache: yes

    - name: Install AUR packages
      shell: |
        yay --sudoloop -S --noconfirm {{ aur_packages | join(' ') }}
      become: no
      become_user: "{{ ansible_user_id }}"


    - name: Install repository packages
      pacman:
        name: "{{ repo_packages }}"
        state: present

    - name: Install AUR packages
      shell: |
        yay -S --noconfirm {{ aur_packages | join(' ') }}
      become: no
      become_user: "{{ ansible_user_id }}"

    - name: Enable and start Docker service
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Add user to docker group
      user:
        name: "{{ ansible_user_id }}"
        groups: docker
        append: yes

    - name: Install Rust
      shell: |
        if ! command -v rustc &> /dev/null; then
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
        fi
      become: no
      become_user: "{{ ansible_user_id }}"

    - name: Install SDKMAN
      shell: |
        if ! command -v sdk &> /dev/null; then
          curl -s "https://get.sdkman.io" | bash
        fi
      become: no
      become_user: "{{ ansible_user_id }}"

    - name: Install Node.js
      shell: |
        if ! command -v node &> /dev/null; then
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash
        
          \. "$HOME/.nvm/nvm.sh"
        
          nvm install 22
        
          node -v # Should print "v22.20.0".
        
          corepack enable yarn
        
          yarn -v
        
        fi
      become: no
      become_user: "{{ ansible_user_id }}"

    - name: Install PHP via phpenv
      shell: |
        if ! command -v phpenv &> /dev/null; then
          git clone https://github.com/phpenv/phpenv.git ~/.phpenv
       
          git clone https://github.com/php-build/php-build ~/.phpenv/plugins/php-build
          phpenv install 8.2
          phpenv global 8.2
        fi
      become: no
      become_user: "{{ ansible_user_id }}"

